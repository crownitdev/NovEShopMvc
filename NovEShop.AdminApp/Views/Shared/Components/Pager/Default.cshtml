@model NovEShop.Handler.Paginations.Dtos.PaginationBaseResponse
@{
    var urlTemplate = Url.Action() + "?pageNumber={0}";
    var request = ViewContext.HttpContext.Request;

    foreach (var key in request.Query.Keys)
    {
        if (key == "pageNumber")
        {
            continue;
        }

        if (request.Query[key].Count > 1)
        {
            foreach (var item in (string[])request.Query[key])
            {
                urlTemplate += "&" + key + "=" + item;
            }
        }
        else
        {
            urlTemplate += "&" + key + "=" + request.Query[key];
        }
    }

    var startIndex = Math.Max(Model.PageNumber - 5, 1);
    var finishIndex = Math.Min(Model.PageNumber + 5, Model.PageCount);
}

@if (Model.PageCount > 1)
{
<ul class="pagination">
    @if (Model.PageNumber != startIndex)
    {
        <li class="page-item">
            <a class="page-link" href="@urlTemplate.Replace("{0}", "1")" title="1" tabindex="-1">Đầu</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="@urlTemplate.Replace("{0}", (Model.PageNumber - 1).ToString())" tabindex="-1">Trước</a>
        </li>
    }
    @for (var i = startIndex; i <= finishIndex; i++)
    {
        if (i == Model.PageNumber)
        {
            <li class="page-item active">
                <a class="page-link" href="#">@i<span class="sr-only">(current)</span></a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" title="Trang @i.ToString()" href="@urlTemplate.Replace("{0}", i.ToString())">@i</a>
            </li>
        }
    }
    @if (Model.PageNumber != finishIndex)
    {
        <li class="page-item">
            <a class="page-link" href="@urlTemplate.Replace("{0}", (Model.PageNumber + 1).ToString())">Sau</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="@urlTemplate.Replace("{0}", Model.PageCount.ToString())" title="@Model.PageCount.ToString()">Cuối</a>
        </li>
    }
</ul>
}